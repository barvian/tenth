@tailwind base;
@tailwind components;
@tailwind utilities;

@font-face {
    font-family: "Value Sans Pro";
    font-weight: normal;
    src: url("/fonts/value-sans-regular-pro.otf");
}

@font-face {
    font-family: "Value Sans Pro";
    font-weight: 500;
    src: url("/fonts/value-sans-medium-pro.otf");
}

@font-face {
    font-family: "Value Sans Pro";
    font-weight: bold;
    src: url("/fonts/value-sans-bold-pro.ttf");
}

@layer base {
    :root {
        @apply overflow-x-hidden scroll-smooth xl:text-[18px];

        --toastBackground: theme(colors.black);
        --toastBarHeight: 0;
        --toastContainerRight: 3rem;
        --toastContainerLeft: 3rem;
        --toastBorderRadius: theme(borderRadius.2xl);
        --toastMsgPadding: theme(spacing.4);
        --toastBtnWidth: calc(var(--toastMsgPadding)*2 + 1rem);
        --toastMargin: 0 auto theme(spacing.6);
        --toastWidth: min(theme(width.96), 100%);
    }

    /* ugly but theme(boxShadow) doesn't work in this case */
    [class*="toastItem"] {
        @apply !shadow
    }

    summary::marker {
        display: none;
    }

    summary::-webkit-details-marker {
        display: none;
    }

    input[autocomplete="off"]::-webkit-contacts-auto-fill-button, 
    input[autocomplete="off"]::-webkit-credentials-auto-fill-button {
        visibility: hidden !important;
        position: absolute;
        right: 0;
    }

    main a {
        @apply text-orange-500 font-medium
    }

    svg * { 
        transform-box: fill-box;
        transform-origin: center
    }

    /* .link {
        display: inline-block;
        position: relative;

    }
    
        .link::after {
            background: currentColor;
            bottom: 0;
            content: '';
            box-shadow: 0 -0.5px 0 currentColor;
            height: 1px;
            left: 0;
            position: absolute;
            transform-origin: center left;
            transform: scaleX(0);
            transition: all .6s cubic-bezier(.16,1,.3,1);
            width: 100%;
        }

        .link:hover::after {
            transform: scaleX(1)
        } */
}

@layer utilities {
    .error {
        @apply shadow-red-500/10;
        --toastBackground: theme(colors.red[500])
    }
}